// AutoTrend v1
SetBarsRequired(sbrAll,sbrAll);

//////////////////////////////////////////////////
// Inputs
nbar             = Param("nbar", 2, 1, 10, 1);
nbarExt          = Param("extra_bars", 1, 0, 10, 1);
stopATRLen       = Param("stop_atr_len", 1, 1, 20, 1);
stopATRMul       = Param("stop_atr_mul", 1, 1, 8, 1);
stopPVNbar       = Param("stop_pv_nbar", 1,1, 10, 1);
maxOpenPositions = Param("max_open_pos", 5, 0, 10, 1);
rsiLen           = Param("rsi_len", 14, 2, 20, 1);
showShortSignals = ParamToggle("show_short_signals", "No|Yes", 0);
condType         = ParamList("condition_type", "TREND_BREAK|SWING_BREAK|TRENDSWING_BREAK|EARLY_BREAK|ALL_BREAK", 2);
pvType           = ParamList("pv_type", "PRICE|RSI", 0);

//////////////////////////////////////////////////
// Set max positions etc
if (maxOpenPositions > 0)
{
    SetOption( "MaxOpenPositions", maxOpenPositions);      
    SetPositionSize(100/maxOpenPositions, spsPercentOfEquity);
}

//////////////////////////////////////////////////
// Get Pivot points based on generic High and Low Levels
function GetPV(nbar_t, H_Level, L_Level)
{
    PHigh            = H_Level > Ref(HHV(H_Level, nbar_t), -1) AND Ref(HHV(H_Level, nbar_t), nbar_t) <= H_Level;
    PLow             = L_Level < Ref(LLV(L_Level, nbar_t), -1) AND Ref(LLV(L_Level, nbar_t), nbar_t) >= L_Level;
    VarSet("PHigh", PHigh);
    VarSet("PLow", PLow);
}

/////////////////////////////////////////////////
// Get Pivots based on High Low
function GetPVHL(nbar_t)
{
    GetPV(nbar_t, H, L);
    VarSet("High", H);
    VarSet("Low", L);
}

/////////////////////////////////////////////////
// Get Pivots based on Open Close
function GetPVOC(nbar_t)
{
    LHigh            = IIf(O > C, O, C);
    LLow             = IIf(O < C, O, C);
    GetPV(nbar_t, LHigh, LLow);
    VarSet("High", H);
    VarSet("Low", L);
}

////////////////////////////////////////////////
// Get Pivots based on RSIs
function GetPVRSI(nbar_t, RSI_len)
{
    rsiInd           = RSI(RSI_len);
    GetPV(nbar_t, rsiInd, rsiInd);
    VarSet("High", H);
    VarSet("Low", L);
}

////////////////////////////////////////////////
// Get Fractals (Previous pivot points)
function GetFractals(PHigh, PLow, LHigh, LLow)
{
    // High Fractals (Take last 4)
    PHighPrice1      = ValueWhen(PHigh, LHigh, 1);
    PHighPrice2      = ValueWhen(PHigh, LHigh, 2);
    PHighPrice3      = ValueWhen(PHigh, LHigh, 3);
    PHighPrice4      = ValueWhen(PHigh, LHigh, 4);

    // Low Fractals (Take last 4)
    PLowPrice1       = ValueWhen(PLow, LLow, 1);
    PLowPrice2       = ValueWhen(PLow, LLow, 2);
    PLowPrice3       = ValueWhen(PLow, LLow, 3);
    PLowPrice4       = ValueWhen(PLow, LLow, 4);
    
    // Conditions
    BuyCondTrBr      = PHighPrice1 >= PHighPrice2 AND PHighPrice2 <= PHighPrice3 AND PHighPrice3 <= PHighPrice4;
    ShortCondTrBr    = PLowPrice1 <= PLowPrice2 AND PLowPrice2 >= PLowPrice3 AND PLowPrice3 >= PLowPrice4;
    BuyCondSwBr      = PHighPrice1 >= PHighPrice2 AND PHighPrice2 >= PHighPrice3;
    ShortCondSwBr    = PLowPrice1 <= PLowPrice2 AND PLowPrice2 <= PLowPrice3;
    BuyCondTrEBr     = PHighPrice1 <= PHighPrice2 AND PHighPrice2 <= PHighPrice3;
    ShortCondTrEBr   = PLowPrice1 >= PLowPrice2 AND PLowPrice2 >= PLowPrice3;

    // Select apppropriate conditions
    if (condType == "TREND_BREAK")
    {
        BuyCond          = BuyCondTrBr;
        ShortCond        = ShortCondTrBr;
    }
    else if (condType == "SWING_BREAK")
    {
        BuyCond          = BuyCondSwBr;
        ShortCond        = ShortCondSwBr;
    }
    else if (condType == "TRENDSWING_BREAK")
    {
        BuyCond          = BuyCondTrBr OR BuyCondSwBr;
        ShortCond        = ShortCondTrBr OR ShortCondSwBr;
    }
    else if (condType == "EARLY_BREAK")
    {
        BuyCond          = BuyCondTrEBr;
        ShortCond        = ShortCondTrEBr;
    }
    else if (condType == "ALL_BREAK")
    {
        BuyCond          = BuyCondTrBr OR BuyCondSwBr OR BuyCondTrEBr;
        ShortCond        = ShortCondTrBr OR ShortCondSwBr OR ShortCondTrEBr;
    }
    
    VarSet("PHighPrice1", PHighPrice1);
    VarSet("PHighPrice2", PHighPrice2);
    VarSet("PHighPrice3", PHighPrice3);
    VarSet("PHighPrice4", PHighPrice4);
    
    VarSet("PLowPrice1", PLowPrice1);
    VarSet("PLowPrice2", PLowPrice2);
    VarSet("PLowPrice3", PLowPrice3);
    VarSet("PLotPrice4", PLowPrice4);
    
    VarSet("BuyCond", BuyCond);
    VarSet("ShortCond", ShortCond);
}

//////////////////////////////////////////////////
// ATR Stop Loss (Trailing)
function StopTrailingATR(ATR_len, ATR_mul)
{
    // calculate support and resistance levels
    sup = C - ATR_mul * ATR(ATR_Len);
    res = C + ATR_mul * ATR(ATR_Len);

    // calculate trailing stop line
    trailARRAY = 0;
    trailstop = 0;
    for(i = 1; i < BarCount; i++)
    {
        if(C[i] > trailstop AND C[i - 1] > trailstop)
            trailstop = Max(trailstop, sup[i]);
        else
            if(C[i] < trailstop AND C[i - 1] < trailstop)
                trailstop = Min(trailstop, res[i]);
            else
                trailstop = IIf(C[i] > trailstop, sup[i], res[i]);

        trailARRAY[i] = trailstop; 
    }
    return trailArray;
}

///////////////////////////////////////////////////
// Pivots based stop loss
function StopTrailingPV(nbar_t)
{
    LHigh            = IIf(O > C, O, C);
    LLow             = IIf(O < C, O, C);
    GetPV(nbar_t, LHigh, LLow);

    PHigh            = VarGet("PHigh");
    PLow             = VarGet("PLow");
    PriceHigh        = ValueWhen(PHigh, LHigh, 1);
    PriceLow         = ValueWhen(PLow, LLow, 1);
    
    return IIf(Close > PriceLow, PriceLow, PriceHigh);
}

/////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////
// Start Main Logic

// Stop loss
stopLoss         = StopTrailingATR(stopATRLen, stopATRMul);
//stopLoss          = StopTrailingPV(stopPVNbar);

// Execution signals
BuyPrimary       = False;
ShortPrimary     = False;
nbarLow          = IIf((nbar - nbarExt) < 1, 1, (nbar - nbarExt));
nbarHigh         = (nbar + nbarExt);
crossSig         = Close;

// Execution signals
for (i= nbarLow; i <= nbarHigh; i++)
{
    // Define conditions
    if (pvType== "PRICE")
    {
        GetPVOC(i);
    }
    else if (pvType == "RSI")
    {
        GetPVRSI(i, rsiLen);
    }

    // Get High Low levels
    PHigh            = VarGet("PHigh");
    PLow             = VarGet("PLow");
    LHigh            = VarGet("High");
    LLow             = VarGet("Low");

    // Get Fractals  
    GetFractals(PHigh, PLow, LHigh, LLow);
    BuyCond          = VarGet("BuyCond");
    ShortCond        = VarGet("ShortCond");
    PHighPrice1      = VarGet("PHighPrice1");
    PLowPrice1       = VarGet("PLowPrice1");
    BuyPrimary       = BuyPrimary OR (Cross(crossSig, PHighPrice1) AND BuyCond);
    ShortPrimary     = ShortPrimary OR (Cross(PLowPrice1, crossSig) AND ShortCond);
}

///////////////////////////////////////////////////////
// Final position Signals
Buy     = BuyPrimary;
Sell    = Cross(stopLoss, Close);
Short   = False;
Cover   = False;
if (showShortSignals)
{
    Short   = ShortPrimary;
    Cover   = Cross(Close, stopLoss);
}

////////////////////////////////////////////////////////
// Plots
PlotShapes(IIf(Buy, shapeHollowUpTriangle, shapeNone), colorGreen, 0, Close, -50);
PlotShapes(IIf(Sell, shapeDownTriangle, shapeNone), colorOrange, 0, Close, -60);
PlotShapes(IIf(Short, shapeHollowDownTriangle, shapeNone), colorRed, 0, Close, -50);
PlotShapes(IIf(Cover, shapeUpTriangle, shapeNone), colorBlue, 0, Close, -60);
Plot(StopLoss, "Stop Loss", colorRed);
